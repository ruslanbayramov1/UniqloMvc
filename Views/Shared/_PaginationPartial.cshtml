@using UniqloMvc.ViewModels.Commons
@model PaginationVM

@if(Model.PageCount != 1)
{
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item"><a class="page-link" asp-route-current="@(Model.CurrentPage - 1)" asp-route-take="@Model.Take">Previous</a></li>
            }
            <li class="page-item @(1==Model.CurrentPage ? "active" : "")"><a class="page-link" asp-action="Index" asp-route-current="1" asp-route-take="@Model.Take">1</a></li>

            @if (Model.CurrentPage - 2 > 1)
            {
                <li class="page-item"><a class="page-link">...</a></li>
            }

            @for (int i = Math.Max(Model.CurrentPage - 1, 2); i <= Math.Min(Model.CurrentPage + 1, Model.PageCount - 1); i++)
            {
                <li class="page-item @(i==Model.CurrentPage ? "active" : "")"><a class="page-link" asp-action="Index" asp-route-current="@i" asp-route-take="@Model.Take">@i</a></li>
            }

            @if (Model.CurrentPage + 2 < Model.PageCount)
            {
                <li class="page-item"><a class="page-link">...</a></li>
            }

            <li class="page-item @(Model.PageCount==Model.CurrentPage ? "active" : "")"><a class="page-link" asp-action="Index" asp-route-current="@Model.PageCount" asp-route-take="@Model.Take">@Model.PageCount</a></li>
            @if (Model.CurrentPage < Model.PageCount)
            {
                <li class="page-item"><a class="page-link" asp-route-current="@(Model.CurrentPage + 1)" asp-route-take="@Model.Take">Next</a></li>
            }
        </ul>
    </nav>
}